<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c78e6ddf-fed7-49ef-bc1c-eaf6fd3c75b6" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/detect.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/detect.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/samples/catalogue.csv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/samples/csv_contents.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/samples/downloaded.csv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/samples/tsv_example.tsv" beforeDir="false" afterPath="$PROJECT_DIR$/src/tests/samples/tsv_example.tsv" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/samples/tsv_example2.tsv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/test_detect_file.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/tests/test_detect_file.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1q9z4zMd49bZZwLrr8oKILPyJ4t" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RunManager" selected="Python tests.Unittests in test_detect_file.py">
    <configuration name="Clone-for-Task-Assist" type="PythonConfigurationType" factoryName="Python">
      <module name="Clone-for-Task-Assist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests for test_detect_file.DetectFileTypeTest.test_by_filename" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="Clone-for-Task-Assist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_detect_file.DetectFileTypeTest.test_by_filename&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests in test_detect_file.py" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="Clone-for-Task-Assist" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/src/tests/test_detect_file.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Unittests in test_detect_file.py" />
        <item itemvalue="Python tests.Unittests for test_detect_file.DetectFileTypeTest.test_by_filename" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c78e6ddf-fed7-49ef-bc1c-eaf6fd3c75b6" name="Default Changelist" comment="" />
      <created>1616506406893</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1616506406893</updated>
      <workItem from="1616506408923" duration="5304000" />
      <workItem from="1616577233857" duration="2801000" />
      <workItem from="1616746803230" duration="16664000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Clone_for_Task_Assist$Unittests_in_test_detect_file_py.coverage" NAME="Unittests in test_detect_file.py Coverage Results" MODIFIED="1616769747145" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/tests" />
    <SUITE FILE_PATH="coverage/Clone_for_Task_Assist$Unittests_for_test_detect_file_DetectFileTypeTest_test_by_filename.coverage" NAME="Unittests for test_detect_file.DetectFileTypeTest.test_by_filename Coverage Results" MODIFIED="1616769740548" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/tests" />
    <SUITE FILE_PATH="coverage/Clone_for_Task_Assist$Clone_for_Task_Assist.coverage" NAME="Clone-for-Task-Assist Coverage Results" MODIFIED="1616769482276" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
  </component>
</project>